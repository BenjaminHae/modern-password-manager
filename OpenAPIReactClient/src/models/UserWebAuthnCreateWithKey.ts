/* tslint:disable */
/* eslint-disable */
/**
 * Password Manager
 * This is a password manager server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: test@te.st
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DecryptionKey,
    DecryptionKeyFromJSON,
    DecryptionKeyFromJSONTyped,
    DecryptionKeyToJSON,
    UserWebAuthnCreate,
    UserWebAuthnCreateFromJSON,
    UserWebAuthnCreateFromJSONTyped,
    UserWebAuthnCreateToJSON,
    UserWebAuthnCreateResponse,
    UserWebAuthnCreateResponseFromJSON,
    UserWebAuthnCreateResponseFromJSONTyped,
    UserWebAuthnCreateResponseToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserWebAuthnCreateWithKey
 */
export interface UserWebAuthnCreateWithKey {
    /**
     * 
     * @type {string}
     * @memberof UserWebAuthnCreateWithKey
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserWebAuthnCreateWithKey
     */
    name: string;
    /**
     * 
     * @type {UserWebAuthnCreateResponse}
     * @memberof UserWebAuthnCreateWithKey
     */
    response: UserWebAuthnCreateResponse;
    /**
     * 
     * @type {string}
     * @memberof UserWebAuthnCreateWithKey
     */
    decryptionKey?: string;
}

export function UserWebAuthnCreateWithKeyFromJSON(json: any): UserWebAuthnCreateWithKey {
    return UserWebAuthnCreateWithKeyFromJSONTyped(json, false);
}

export function UserWebAuthnCreateWithKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserWebAuthnCreateWithKey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'response': UserWebAuthnCreateResponseFromJSON(json['response']),
        'decryptionKey': !exists(json, 'decryptionKey') ? undefined : json['decryptionKey'],
    };
}

export function UserWebAuthnCreateWithKeyToJSON(value?: UserWebAuthnCreateWithKey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'response': UserWebAuthnCreateResponseToJSON(value.response),
        'decryptionKey': value.decryptionKey,
    };
}


