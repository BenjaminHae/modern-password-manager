<?php
/**
 * AccountsApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Password Manager
 *
 * This is a password manager server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: test@te.st
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\Account;
use OpenAPI\Server\Model\AccountId;

/**
 * AccountsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface AccountsApiInterface
{

    /**
     * Sets authentication method csrf
     *
     * @param string $value Value of the csrf authentication method.
     *
     * @return void
     */
    public function setcsrf($value);

    /**
     * Operation addAccounts
     *
     * Add Account
     *
     * @param  \OpenAPI\Server\Model\Account[] $account  Account Values (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\AccountId[]
     */
    public function addAccounts(array $account, &$responseCode, array &$responseHeaders);


    /**
     * Operation deleteAccount
     *
     * Delete a stored Account
     *
     * @param  \int $id  The id of the account (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\AccountId[]
     */
    public function deleteAccount($id, &$responseCode, array &$responseHeaders);


    /**
     * Operation getAccounts
     *
     * Returns the accounts stored by the current user
     *
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\AccountId[]
     */
    public function getAccounts(&$responseCode, array &$responseHeaders);


    /**
     * Operation updateAccount
     *
     * Update a stored account
     *
     * @param  \int $id  The id of the account (required)
     * @param  \OpenAPI\Server\Model\Account $account  Account Object (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\AccountId[]
     */
    public function updateAccount($id, Account $account, &$responseCode, array &$responseHeaders);

}
