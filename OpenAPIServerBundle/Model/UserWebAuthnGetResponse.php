<?php
/**
 * UserWebAuthnGetResponse
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Password Manager
 *
 * This is a password manager server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: test@te.st
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the UserWebAuthnGetResponse model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class UserWebAuthnGetResponse 
{
        /**
     * @var string
     * @SerializedName("authenticatorData")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $authenticatorData;

    /**
     * @var string
     * @SerializedName("clientDataJSON")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $clientDataJSON;

    /**
     * @var string
     * @SerializedName("type")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $type;

    /**
     * @var string
     * @SerializedName("signature")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $signature;

    /**
     * @var string
     * @SerializedName("userHandle")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $userHandle;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->authenticatorData = isset($data['authenticatorData']) ? $data['authenticatorData'] : null;
        $this->clientDataJSON = isset($data['clientDataJSON']) ? $data['clientDataJSON'] : null;
        $this->type = isset($data['type']) ? $data['type'] : null;
        $this->signature = isset($data['signature']) ? $data['signature'] : null;
        $this->userHandle = isset($data['userHandle']) ? $data['userHandle'] : null;
    }

    /**
     * Gets authenticatorData.
     *
     * @return string
     */
    public function getAuthenticatorData()
    {
        return $this->authenticatorData;
    }

    /**
     * Sets authenticatorData.
     *
     * @param string $authenticatorData
     *
     * @return $this
     */
    public function setAuthenticatorData($authenticatorData)
    {
        $this->authenticatorData = $authenticatorData;

        return $this;
    }

    /**
     * Gets clientDataJSON.
     *
     * @return string
     */
    public function getClientDataJSON()
    {
        return $this->clientDataJSON;
    }

    /**
     * Sets clientDataJSON.
     *
     * @param string $clientDataJSON
     *
     * @return $this
     */
    public function setClientDataJSON($clientDataJSON)
    {
        $this->clientDataJSON = $clientDataJSON;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param string $type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets signature.
     *
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * Sets signature.
     *
     * @param string $signature
     *
     * @return $this
     */
    public function setSignature($signature)
    {
        $this->signature = $signature;

        return $this;
    }

    /**
     * Gets userHandle.
     *
     * @return string
     */
    public function getUserHandle()
    {
        return $this->userHandle;
    }

    /**
     * Sets userHandle.
     *
     * @param string $userHandle
     *
     * @return $this
     */
    public function setUserHandle($userHandle)
    {
        $this->userHandle = $userHandle;

        return $this;
    }
}


