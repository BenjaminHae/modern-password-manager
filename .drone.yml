kind: pipeline
type: docker
name: build
steps:
 - name: react
   image: node:12
   commands:
    - cd reactClient/my-app
    - npm install
    - npm link --unsafe-perm ../../OpenAPIReactClient
    - CI="" npm run build
 - name: symfony
   image: composer:2
   commands:
    - cd ./Symfony-API
    - composer -q install --no-suggest --no-dev --no-progress --optimize-autoloader --classmap-authoritative
    - (cd vendor/openapi && rm server-bundle && cp -r ../../../OpenAPIServerBundle/ server-bundle)
    - cp -r ../reactClient/my-app/build/. public/
    - rm ./templates/base.html.twig && ln -s ../public/index.html ./templates/index.html
    - cp ../dockerBuild/SymfonyDockerfile Dockerfile
 - name: deploy to test
   image: alpine:3.12
   environment:
     SSH_PRIVATE_KEY:
       from_secret: "${DRONE_DEPLOY_TO}_ssh_private_key"
     SSH_HOST:
       from_secret: "${DRONE_DEPLOY_TO}_ssh_host"
     SSH_USER:
       from_secret: "${DRONE_DEPLOY_TO}_ssh_user"
     SSH_HOST_KEY:
       from_secret: "${DRONE_DEPLOY_TO}_ssh_host_key"
     DEPLOY_PATH: "~/htdocs/pwman-${DRONE_DEPLOY_TO}/"
     COPY_PATH: "~/tmp/mpm.zip"
     COPY_REMOTE_PATH: "tmp/"
     DEV_PHP_VERSION: "php7.3"
     TEST_PHP_VERSION: "php7.4"
     PROD_PHP_VERSION: "php7.4"
   commands:
     - apk update
     - apk add zip openssh-client
    # setup ssh
     - mkdir ~/.ssh
     - echo $${SSH_PRIVATE_KEY} | base64 -d > ~/.ssh/id_drone
     - chmod 0600 ~/.ssh/id_drone
     - echo $${SSH_HOST_KEY} | base64 -d > ~/.ssh/known_hosts
     - chmod 0600 ~/.ssh/known_hosts
    # create zip archive
     - zip -q --symlinks -r mpm.zip ./Symfony-API
    # transfer to host
     - scp -i ~/.ssh/id_drone mpm.zip "$${SSH_USER}@$${SSH_HOST}:$${COPY_REMOTE_PATH}}"
    # extract to destination
     - ssh -i ~/.ssh/id_drone "$${SSH_USER}@$${SSH_HOST}" "unzip -o -q $${COPY_PATH} -d $${DEPLOY_PATH} && rm $${COPY_PATH}"
    # execute db update
     - ssh -i ~/.ssh/id_drone "$${SSH_USER}@$${SSH_HOST}" "cd $${DEPLOY_PATH}Symfony-API && $${${DRONE_DEPLOY_TO^^}PHP_VERSION} bin/console doctrine:schema:update --force && $${${DRONE_DEPLOY_TO^^}PHP_VERSION} bin/console cache:clear"
   when:
     event:
      - promote
     target:
      - test
