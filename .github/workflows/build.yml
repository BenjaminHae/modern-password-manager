name: build application
on: [push]

jobs:
  build_react:
    name: build react app 
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache node
        uses: actions/cache@v2
        env:
          cache-name: cache-react-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
        working-directory: ./reactClient/my-app/
      - run: npm link ../../OpenAPIReactClient/
        working-directory: ./reactClient/my-app/
      - run: npm run build
        working-directory: ./reactClient/my-app/
        env:
          CI: ""
      - uses: actions/upload-artifact@v2
        with:
          name: react-build
          path: reactClient/my-app/build/
  build_symfony:
    name: build symfony
    needs: build_react
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
        working-directory: ./Symfony-API/
      - name: Cache composer
        uses: actions/cache@v2
        env:
          cache-name: cache-symfony-composer-modules
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
      - name: Run composer install
        run: composer install --no-suggest --no-dev --no-progress --optimize-autoloader --classmap-authoritative
        working-directory: ./Symfony-API/
      - name: Copy OpenAPIServerBundle
        run: rm server-bundle && cp -r ../../../OpenAPIServerBundle/ server-bundle
        working-directory: ./Symfony-API/vendor/openapi
      - name: Insert ReactJS files
        uses: actions/download-artifact@v2
        with:
          name: react-build
          path: Symfony-API/public/
      - name: copy index.html of react to template
        run: "rm ./templates/base.html.twig && ln -s ../public/index.html ./templates/index.html"
        working-directory: ./Symfony-API/
      - name: copy Dockerfile
        run: "cp ../dockerBuild/SymfonyDockerfile Dockerfile"
        working-directory: ./Symfony-API/
      #- name: zip
      #  run: "zip --symlinks -r modern-password-manager.zip ./Symfony-API"
      #  working-directory: ./
      - uses: actions/upload-artifact@v2
        with:
          name: symfony-project
          path: Symfony-API/
